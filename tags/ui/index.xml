<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ui on Console Labs</title><link>https://log.console.so/tags/ui/</link><description>Recent content in ui on Console Labs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>han@console.so (Han Ngo)</managingEditor><webMaster>han@console.so (Han Ngo)</webMaster><copyright>Â© 2023 ConsoleLabs.</copyright><lastBuildDate>Mon, 25 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://log.console.so/tags/ui/index.xml" rel="self" type="application/rss+xml"/><item><title>How to work with emoji on Discord</title><link>https://log.console.so/playbook/render-emoji/</link><pubDate>Mon, 25 Sep 2023 00:00:00 +0000</pubDate><author>han@console.so (Han Ngo)</author><guid>https://log.console.so/playbook/render-emoji/</guid><description>Emojis play a crucial role in Discord, enhancing the appearance and uniqueness of Discord content. We aim to utilize emojis to make our Bot better than others.
However, managing emojis is not as simple as it may seem. Along our journey, we&amp;rsquo;ve encountered some important considerations.
Product People first As engineers, we don&amp;rsquo;t make decisions about designs or changes to components. Initially, we hardcoded the emoji ID directly into our Discord bot&amp;rsquo;s source code.</description></item><item><title>Format a Neko profile</title><link>https://log.console.so/playbook/format-profile-number/</link><pubDate>Mon, 11 Sep 2023 00:00:00 +0000</pubDate><author>han@console.so (Han Ngo)</author><guid>https://log.console.so/playbook/format-profile-number/</guid><description>Intro When it comes to UI rendering, there&amp;rsquo;s no one-size-fits-all &amp;ldquo;correct way.&amp;rdquo; This is especially true for us because we&amp;rsquo;re building across various platforms and ecosystems, each with its unique user behavior. Consequently, there&amp;rsquo;s no universal UI rendering approach that suits every situation.
In today&amp;rsquo;s article, we&amp;rsquo;ll delve into our first component: the &amp;ldquo;Neko Profile.&amp;rdquo;
What is an Neko Profile A Neko profile is what we call our &amp;ldquo;user.&amp;rdquo; This term applies not only to Mochi but also to everything we&amp;rsquo;ve built, from Pod Town to NFTs and beyond.</description></item><item><title>Shared UI library in multiple platforms</title><link>https://log.console.so/playbook/shared-ui-lib/</link><pubDate>Mon, 11 Sep 2023 00:00:00 +0000</pubDate><author>han@console.so (Han Ngo)</author><guid>https://log.console.so/playbook/shared-ui-lib/</guid><description>Background Earlier this year, we introduced a new version of Telegram for Mochi, but it came with some new challenges.
Up until now, we&amp;rsquo;ve been using a single backend system to support all of our services. This approach was taken to ensure a smooth experience for both users and engineers across different platforms. However, a problem arose when it came to the user interface. We found ourselves dealing with two different sets of rules (Discord &amp;amp; Telegram) for how the interface should look and behave.</description></item></channel></rss>